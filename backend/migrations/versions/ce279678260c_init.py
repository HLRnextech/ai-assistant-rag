"""init

Revision ID: ce279678260c
Revises: 
Create Date: 2024-05-25 11:45:27.868581

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy

# revision identifiers, used by Alembic.
revision = 'ce279678260c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asset',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('guid', sa.String(length=32), nullable=False),
                    sa.Column('type', sa.String(length=200), nullable=False),
                    sa.Column('value', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True),
                    sa.Column('status', sa.Enum('PENDING', 'SUCCESS',
                                                'FAILED', name='assetstatus'), nullable=False),
                    sa.Column('asset_metadata', sa.JSON(), nullable=True),
                    sa.Column('parent_asset_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['parent_asset_id'], ['asset.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('asset', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_asset_deleted_at'), [
                              'deleted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_guid'), [
                              'guid'], unique=True)

    op.create_table('client',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('guid', sa.String(length=32), nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    with op.batch_alter_table('client', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_client_deleted_at'), [
                              'deleted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_client_guid'), [
                              'guid'], unique=True)
        batch_op.create_index('ix_client_guid_deleted_at', [
                              'guid', 'deleted_at'], unique=False)
        batch_op.create_index('ix_client_name_deleted_at', [
                              'name', 'deleted_at'], unique=False)

    op.create_table('bot',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('guid', sa.String(length=32), nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=False),
                    sa.Column('deployment_status', sa.Enum('STAGING', 'LIVE',
                                                           name='deploymentstatus'), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('status', sa.Enum('QUEUED', 'PROGRESS', 'SUCCESS',
                                                'FAILED', name='botstatus'), nullable=False),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True),
                    sa.Column('configuration', postgresql.JSON(
                        astext_type=sa.Text()), nullable=False),
                    sa.Column('logo_url', sa.String(
                        length=400), nullable=True),
                    sa.Column('is_deviating_from_live',
                              sa.Boolean(), nullable=True),
                    sa.Column('associated_bot_id',
                              sa.Integer(), nullable=True),
                    sa.Column('client_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['associated_bot_id'], ['bot.id'], ),
                    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    with op.batch_alter_table('bot', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bot_deleted_at'), [
                              'deleted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_bot_guid'), ['guid'], unique=True)

    op.create_table('embedding',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('embedding', pgvector.sqlalchemy.Vector(
                        dim=512), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('chunk_text', sa.Text(), nullable=False),
                    sa.Column('chunk_metadata', sa.JSON(), nullable=True),
                    sa.Column('asset_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('bot_assets',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('bot_id', sa.Integer(), nullable=False),
                    sa.Column('asset_id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
                    sa.ForeignKeyConstraint(['bot_id'], ['bot.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint(
                        'bot_id', 'asset_id', name='_bot_asset_uc')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bot_assets')
    op.drop_table('embedding')
    with op.batch_alter_table('bot', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bot_guid'))
        batch_op.drop_index(batch_op.f('ix_bot_deleted_at'))

    op.drop_table('bot')
    with op.batch_alter_table('client', schema=None) as batch_op:
        batch_op.drop_index('ix_client_name_deleted_at')
        batch_op.drop_index('ix_client_guid_deleted_at')
        batch_op.drop_index(batch_op.f('ix_client_guid'))
        batch_op.drop_index(batch_op.f('ix_client_deleted_at'))

    op.drop_table('client')
    with op.batch_alter_table('asset', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_asset_guid'))
        batch_op.drop_index(batch_op.f('ix_asset_deleted_at'))

    op.drop_table('asset')
    # ### end Alembic commands ###
